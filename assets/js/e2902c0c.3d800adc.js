"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[831],{6322:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=r(1085),a=r(1184);const s={sidebar_position:1},c="createSecretManagerSecret",i={id:"utilities/secretmanagerutil/createsecretmanagersecret",title:"createSecretManagerSecret",description:"Creates Secrets Manager secret while adhering to same naming convention mentioned in Parameter naming",source:"@site/docs/utilities/secretmanagerutil/createsecretmanagersecret.md",sourceDirName:"utilities/secretmanagerutil",slug:"/utilities/secretmanagerutil/createsecretmanagersecret",permalink:"/aws-cdk-lib-util/docs/utilities/secretmanagerutil/createsecretmanagersecret",draft:!1,unlisted:!1,editUrl:"https://github.com/crisboarna/aws-cdk-lib-util/tree/master/packages/docs/docs/utilities/secretmanagerutil/createsecretmanagersecret.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"capitalizeInputString",permalink:"/aws-cdk-lib-util/docs/utilities/cdkstringutil/capitalizeinputstring"},next:{title:"createSecurityGroup",permalink:"/aws-cdk-lib-util/docs/utilities/securitygrouputil/createsecuritygroup"}},o={},l=[{value:"Example usage",id:"example-usage",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"createsecretmanagersecret",children:"createSecretManagerSecret"}),"\n",(0,n.jsxs)(t.p,{children:["Creates ",(0,n.jsx)(t.code,{children:"Secrets Manager"})," secret while adhering to same naming convention mentioned in ",(0,n.jsx)(t.a,{href:"#parameter-naming",children:"Parameter naming"})]}),"\n",(0,n.jsx)(t.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",metastring:'title="YourStack.ts"',children:"import { SecretManagerUtil } from 'aws-cdk-lib-util';\n...\n\nexport class YourStack extends Stack {\n  constructor(scope: Construct, id: string, props: IYourStackProps) {\n    super(scope, id, props);\n\n    const {\n      projectName,\n      stackEnv,\n      secret\n    } = props;\n    ...\n    const paramName = 'db/rds/auth/';\n    const paramValue = {secret};\n    \n    SecretManagerUtil.createSecretManagerSecret({\n      scope: this,\n      projectName,\n      stackEnv,\n      paramName: paramName,\n      value: paramValue,\n    });\n  ...\n  }\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},1184:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var n=r(4041);const a={},s=n.createContext(a);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);