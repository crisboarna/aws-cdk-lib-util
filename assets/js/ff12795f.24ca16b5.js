"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[523],{5388:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});var c=i(1085),s=i(1184);const a={sidebar_position:1},r="checkArtifactDirectoryExists",n={id:"utilities/cdkdirectoryutil/checkartifactdirectoryexists",title:"checkArtifactDirectoryExists",description:"Simple file utility to be used when you want to ensure that a artifact path for a Lambda or a Lambda layer exists, even if you do not plan on deploying that specific stack.",source:"@site/docs/utilities/cdkdirectoryutil/checkartifactdirectoryexists.md",sourceDirName:"utilities/cdkdirectoryutil",slug:"/utilities/cdkdirectoryutil/checkartifactdirectoryexists",permalink:"/aws-cdk-lib-util/docs/utilities/cdkdirectoryutil/checkartifactdirectoryexists",draft:!1,unlisted:!1,editUrl:"https://github.com/crisboarna/aws-cdk-lib-util/tree/master/packages/docs/docs/utilities/cdkdirectoryutil/checkartifactdirectoryexists.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"hasContext",permalink:"/aws-cdk-lib-util/docs/utilities/cdkcontextutil/hascontext"},next:{title:"checkArtifactFileExists",permalink:"/aws-cdk-lib-util/docs/utilities/cdkdirectoryutil/checkartifactfileexists"}},o={},l=[{value:"Example usage",id:"example-usage",level:2}];function d(t){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h1,{id:"checkartifactdirectoryexists",children:"checkArtifactDirectoryExists"}),"\n",(0,c.jsx)(e.p,{children:"Simple file utility to be used when you want to ensure that a artifact path for a Lambda or a Lambda layer exists, even if you do not plan on deploying that specific stack."}),"\n",(0,c.jsxs)(e.p,{children:["Useful when you have multiple stacks in same ",(0,c.jsx)(e.code,{children:"CDK"})," app file but only intend to deploy one stack without building all dependencies."]}),"\n",(0,c.jsx)(e.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-typescript",metastring:'title="YourStack.ts"',children:"import { App } from 'aws-cdk-lib';\nimport { CDKDirectoryUtil } from 'aws-cdk-lib-util';\n\nconst artifactPath = './dist/apps/stack2';\n\nconst app = new App();\n\nconst stack1 = new YourStack1(app,'Stack1',{...});\n\nCDKDirectoryUtil.checkArtifactDirectoryExists(artifactPath);\n\nconst stack2 = new YourStack1(app,'Stack2',{artifactPath,...});\n...\n\n"})})]})}function u(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,c.jsx)(e,{...t,children:(0,c.jsx)(d,{...t})}):d(t)}},1184:(t,e,i)=>{i.d(e,{R:()=>r,x:()=>n});var c=i(4041);const s={},a=c.createContext(s);function r(t){const e=c.useContext(a);return c.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function n(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),c.createElement(a.Provider,{value:e},t.children)}}}]);