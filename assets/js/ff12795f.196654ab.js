"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[436],{876:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>f});var i=r(2784);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,i,a=function(t,e){if(null==t)return{};var r,i,a={},n=Object.keys(t);for(i=0;i<n.length;i++)r=n[i],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(i=0;i<n.length;i++)r=n[i],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=i.createContext({}),l=function(t){var e=i.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},u=function(t){var e=l(t.components);return i.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(t,e){var r=t.components,a=t.mdxType,n=t.originalType,s=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),d=l(r),f=a,y=d["".concat(s,".").concat(f)]||d[f]||p[f]||n;return r?i.createElement(y,c(c({ref:e},u),{},{components:r})):i.createElement(y,c({ref:e},u))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var n=r.length,c=new Array(n);c[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:a,c[1]=o;for(var l=2;l<n;l++)c[l]=r[l];return i.createElement.apply(null,c)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},628:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var i=r(7896),a=(r(2784),r(876));const n={sidebar_position:1},c="checkArtifactDirectoryExists",o={unversionedId:"utilities/cdkdirectoryutil/checkartifactdirectoryexists",id:"utilities/cdkdirectoryutil/checkartifactdirectoryexists",title:"checkArtifactDirectoryExists",description:"Simple file utility to be used when you want to ensure that a artifact path for a Lambda or a Lambda layer exists, even if you do not plan on deploying that specific stack.",source:"@site/docs/utilities/cdkdirectoryutil/checkartifactdirectoryexists.md",sourceDirName:"utilities/cdkdirectoryutil",slug:"/utilities/cdkdirectoryutil/checkartifactdirectoryexists",permalink:"/aws-cdk-lib-util/docs/utilities/cdkdirectoryutil/checkartifactdirectoryexists",editUrl:"https://github.com/crisboarna/aws-cdk-lib-util/tree/master/packages/docs/docs/utilities/cdkdirectoryutil/checkartifactdirectoryexists.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"hasContext",permalink:"/aws-cdk-lib-util/docs/utilities/cdkcontextutil/hascontext"},next:{title:"checkArtifactFileExists",permalink:"/aws-cdk-lib-util/docs/utilities/cdkdirectoryutil/checkartifactfileexists"}},s={},l=[{value:"Example usage",id:"example-usage",level:2}],u={toc:l};function p(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,i.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"checkartifactdirectoryexists"},"checkArtifactDirectoryExists"),(0,a.kt)("p",null,"Simple file utility to be used when you want to ensure that a artifact path for a Lambda or a Lambda layer exists, even if you do not plan on deploying that specific stack."),(0,a.kt)("p",null,"Useful when you have multiple stacks in same ",(0,a.kt)("inlineCode",{parentName:"p"},"CDK")," app file but only intend to deploy one stack without building all dependencies."),(0,a.kt)("h2",{id:"example-usage"},"Example usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="YourStack.ts"',title:'"YourStack.ts"'},"import { App } from 'aws-cdk-lib';\nimport { CDKDirectoryUtil } from 'aws-cdk-lib-util';\n\nconst artifactPath = './dist/apps/stack2';\n\nconst app = new App();\n\nconst stack1 = new YourStack1(app,'Stack1',{...});\n\nCDKDirectoryUtil.checkArtifactDirectoryExists(artifactPath);\n\nconst stack2 = new YourStack1(app,'Stack2',{artifactPath,...});\n...\n\n")))}p.isMDXComponent=!0}}]);